<%
	const datas = [
		{
			id: 1,
			name: 'Emir Wicks',
			email: 'emir.wicks@mail.com',
			verified: '2020/4/12',
			level: 'admin',
		},
		{
			id: 2,
			name: 'Zaina Goldsmith',
			email: 'zaina.goldsmith@mail.com',
			<!-- verified: '2020/4/23', -->
			level: 'admin',
		},
		{
			id: 3,
			name: 'Mahima Lopez',
			email: 'mahima.lopez@mail.com',
			verified: '2021/3/26',
			level: 'pm',
		},
		{
			id: 4,
			name: 'Pharrell Murray',
			email: 'pharrell.murray@mail.com',
			verified: '2022/10/3',
			level: 'pm',
		},
		{
			id: 5,
			name: 'Annika Mcbride',
			email: 'annika.mcbride@mail.com',
			verified: '2023/8/20',
			level: 'littleOne',
		},
		{
			id: 6,
			name: 'Fatimah Clark',
			email: 'fatimah.clark@mail.com',
			<!-- verified: '2023/2/19', -->
			level: 'littleOne',
		},
		{
			id: 7,
			name: 'Klaudia Rhodes',
			email: 'klaudia.rhodes@mail.com',
			verified: '2021/6/5',
			level: 'littleOne',
		},
		{
			id: 8,
			name: 'Tillie Lucero',
			email: 'tillie.lucero@mail.com',
			verified: '2023/5/29',
			level: 'admin',
		},
		{
			id: 9,
			name: 'Sabrina Stephenson',
			email: 'sabrina.stephenson@mail.com',
			verified: '2024/9/7',
			level: 'pm',
		},
		{
			id: 10,
			name: 'Annie Smith',
			email: 'annie.smith@mail.com',
			verified: '2023/12/21',
			level: 'littleOne',
		},
	];
%>

<table class="table table-hover mb-63px">
	<thead>
		<tr class="border-dark">
			<th scope="col">
				<div class="d-flex align-items-center">
					<span class="me-1">ID</span>
					<span class="material-icons text-success fs-18px">arrow_downward</span>
				</div>
			</th>
			<th scope="col">Name</th>
			<th scope="col">Email</th>
			<th scope="col">Verified</th>
			<th scope="col">&nbsp;</th>
		</tr>
	</thead>
	<tbody>
		
		<% datas.forEach((item) => { %>
			
			<tr>
				<th scope="row">#<%=item.id%></th>
				<td><%=item.name%></td>
				<td class="text-transform-lowercase"><%=item.email%></td>
				<td>
					<%= item.verified === undefined ? "No" : "Yes" %>
				</td>
				<td class="d-flex justify-content-end gap-6" data-func>
					<a href="javascript:void(0);" class="d-flex" data-func-view="<%=item.id%>" title="View">
						<span class="material-icons pointer-events-none">visibility</span>
					</a>
					<a href="javascript:void(0);" class="d-flex" data-func-edit="<%=item.id%>" title="Modify">
						<span class="material-icons pointer-events-none">edit</span>
					</a>
				</td>
			</tr>
			
		<% }); %>
		
	</tbody>
</table>


<!-- Modal - View -->
<div class="modal fade" id="viewModal" tabindex="-1" 
	aria-labelledby="viewModalLabel" aria-hidden="true"
>
	<!-- Skill：使用 modal-dialog-centered 垂直置中 -->
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			
			<!-- 資料卡 -->
			<div class="d-flex column-gap-6">
				
				<!-- 照片 -->
				<div class="flex-shrink-0">
					<img src="../assets/images/emir.jpeg" alt="Emir Wicks" 
						class="w-141px h-141px object-fit-cover rounded-start">
				</div>
				
				<!-- 個人資料 -->
				<div class="flex-grow-1 d-flex flex-column justify-content-between">
					
					<!-- 資料內容 -->
					<div>
						<div class="d-flex justify-content-between mb-3px">
							<div class="fs-6" id="viewId"></div>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						
						<div class="text-transform-capitalize">admin</div>
						<h4 id="viewModalLabel" class="fw-bold mb-2"></h4>
						<div class="text-transform-lowercase text-secondary fs-14px" id="viewEmail"></div>
					</div>
					
					<!-- verified -->
					<div class="d-flex justify-content-between align-items-center">
						<div class="text-transform-capitalize fs-14px">verified</div>
						
						<a data-bs-toggle="collapse" href="#collapseButtons" 
							class="d-flex text-success collapsed"
							role="button" aria-expanded="false" aria-controls="collapseButtons"
						>
							<span class="material-icons expand_more">expand_more</span>
							<span class="material-icons expand_less">expand_less</span>
						</a>
					</div>
				</div>
				
			</div>
			<!-- 資料卡 - end -->
			
			<!-- 折疊按鈕 -->
			<div class="collapse" id="collapseButtons">
				<div class="d-flex justify-content-end pt-8">
					<button type="button" class="btn btn-outline-danger me-4">Deactivate</button>
					<button type="button" class="btn btn-success">Edit</button>
				</div>
			</div>
			
		</div>
		<!-- modal-content - end -->
	</div>
	<!-- modal-dialog - end -->
</div>
<!-- Modal - View - end -->


<!-- Modal - Edit -->
<!-- Skill：使用 data-bs-backdrop="static" data-bs-keyboard="false" 阻止點擊外面或用鍵盤關閉 -->
<div class="modal fade" id="editModal" tabindex="-1" 
	data-bs-backdrop="static" data-bs-keyboard="false" 
	aria-labelledby="editModalLabel" aria-hidden="true"
>
	<!-- Skill：使用 modal-dialog-scrollable 滾動長內容 -->
	<div class="modal-dialog modal-dialog-scrollable">
		<div class="modal-content pb-4">
			<div class="modal-header">
				<h5 class="modal-title fw-bold fs-4" id="editModalLabel">
					<span id="editTitle"></span> 
					Admin
				</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			
			<!-- modal-body -->
			<div class="modal-body">
				<form id="formEdit" novalidate>
					
					<!-- Account -->
					<fieldset>
						<legend>Account</legend>
						
						<div class="mb-4">
							<label for="accountName" class="form-label fs-14px">Name</label>
							<input type="text" class="form-control" id="accountName" placeholder="請輸入姓名" required>
							
							<div class="invalid-feedback">請輸入姓名！</div>
						</div>
						
						<div class="mb-4">
							<label for="accountEmail" class="form-label fs-14px">Email</label>
							<input type="email" class="form-control" id="accountEmail" placeholder="name@example.com" required>
							
							<div class="invalid-feedback">請輸入正確的 Email！</div>
						</div>
						
					</fieldset>
					
					<hr>
					
					<!-- Verification -->
					<fieldset id="blockVerification">
						<legend>Verification</legend>
						
						<div class="d-flex justify-content-between align-items-center mb-4">
							<!-- Unverified -->
							<div class="block-unverified">
								<span class="material-icons text-danger me-2">
									report_problem
								</span>
								<span class="fw-bold">Unverified</span>
							</div>
							
							<!-- Verified，預設隱藏 -->
							<div class="block-verified">
								<span class="material-icons text-success me-2">
									check_circle
								</span>
								<span class="fw-bold">Verified</span>
							</div>
							
							<div class="fs-14px" id="verifiedDate"></div>
						</div>
						
						<button type="button" class="btn btn-outline-success py-4 w-100" id="btnVerification">Send Verification Mail</button>
						
					</fieldset>
					
					<hr>
					
					<!-- Access Level -->
					<fieldset>
						<legend>Access Level</legend>
						
						<select class="form-select border-dark" id="accessLevel" aria-label="Access Level" required>
							<option value="" disabled hidden selected>-Choose access level-</option>
							<option value="admin">Admin</option>
							<option value="pm">PM</option>
							<option value="littleOne">小嘍嘍</option>
						</select>
						
						<div class="invalid-feedback">請選擇 Access Level！</div>
					</fieldset>
					
					<hr>
					
					<!-- Custom Access -->
					<fieldset>
						<legend>Custom Access</legend>
						
						<div class="form-check">
							<input class="form-check-input" type="checkbox" value="lecture" id="accessLecture">
							<label class="form-check-label" for="accessLecture">
								Lecture
							</label>
						</div>
						<div class="form-check">
							<input class="form-check-input" type="checkbox" value="coupon" id="accessCoupon">
							<label class="form-check-label" for="accessCoupon">
								Coupon
							</label>
						</div>
						<div class="form-check">
							<input class="form-check-input" type="checkbox" value="message" id="accessMessage">
							<label class="form-check-label" for="accessMessage">
								Message
							</label>
						</div>
						<div class="form-check">
							<input class="form-check-input" type="checkbox" value="setting" id="accessSetting">
							<label class="form-check-label" for="accessSetting">
								Setting
							</label>
						</div>
						<div class="form-check">
							<input class="form-check-input" type="checkbox" value="taskMenu" id="accessTaskMenu">
							<label class="form-check-label" for="accessTaskMenu">
								Task Menu
							</label>
						</div>
					</fieldset>
					
					<div class="deactivate">
						<hr>
						
						<fieldset>
							<legend>Deactivate Account</legend>
							
							<div class="d-flex align-items-center text-danger mb-4">
								<span class="material-icons me-2">
									report_problem
								</span>
								<span>This cannot be undone!</span>
							</div>
							
							<button type="button" class="btn btn-outline-danger py-4 w-100">Deactivate This Account</button>
						</fieldset>
					</div>
					
				</form>
			</div>
			<!-- modal-body - end -->
			
			<!-- 頁尾按鈕 -->
			<div class="modal-footer">
				<button type="button" class="btn btn-outline-success me-4" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-success" id="btnEditSave"></button>
			</div>
			
		</div>
	</div>
</div>
<!-- Modal - Edit - end -->


<script type="module">
	
	import { Modal } from 'bootstrap';
	
	// 資料
	const datas = <%- JSON.stringify(datas) %>;
	
	// 取出資料
	function getData(id)
	{
		let data;
		
		if (id) {
			id = Number(id);
			data = datas.find((item) => {
				return item.id === id;
			});
		}
		
		return data;
	}
	
	
	// Modal
	const elemEditModal = document.getElementById('editModal');
	const viewModal = new Modal(document.getElementById('viewModal'));
	const editModal = new Modal(elemEditModal);
	
	// 元素: View modal 相關
	const elemViewId = document.querySelector("#viewId");
	const elemViewName = document.querySelector("#viewModalLabel");
	const elemViewEmail = document.querySelector("#viewEmail");
	
	// 元素: Edit modal 相關
	const elemEditTitle = document.getElementById('editTitle');
	const elemAccountName = document.getElementById('accountName');
	const elemAccountEmail = document.getElementById('accountEmail');
	const elemBlockVerification = document.getElementById('blockVerification');
	const elemVerifiedDate = document.getElementById('verifiedDate');
	const elemBtnVerification = document.getElementById('btnVerification');
	const elemAccessLevel = document.getElementById('accessLevel');
	
	// 元素: Edit modal - form
	const elemEditForm = document.getElementById('formEdit');
	elemEditForm.addEventListener("submit", (event) =>
	{
		event.preventDefault();
		
		// 檢核成功
		if (elemEditForm.checkValidity()) {
			alert("submit!");
			editModal.hide();
		}
		// 檢核失敗
		else {
			// 加入 BS form validation 效果
			elemEditForm.classList.add('was-validated');
		}
	});
	
	// 元素: Edit modal - submit button
	const elemBtnEditSave = document.getElementById('btnEditSave');
	elemBtnEditSave.addEventListener("click", (event) => {
		elemEditForm.requestSubmit();
	});
	
	
	/**
	 * Skill：
	 * 設定 edit modal 開啟時執行的動作。
	 * 當呼叫 show 實例方法時，此事件會立即觸發。
	 * 但此時渲染尚未完成，因此僅能設定資料，無法執行 focus 之類的動作。
	 */
	elemEditModal.addEventListener('show.bs.modal', (event) => {
		const relatedTarget = event.relatedTarget;
		// console.log(relatedTarget);
		
		/**
		 * Skill：
		 * 透過按鈕綁定 BS Modal 動作，會自動帶有 relatedTarget（為觸發的按鈕元素）。
		 * 透過 JS 呼叫觸發 BS Modal，在觸發時傳入的參數會作為 relatedTarget，若沒有傳入參數則 relatedTarget 為 undefined。
		 * "Add New Admin" 是由按鈕綁定觸發；Modify 是由 JS 呼叫觸發，並且會傳入當筆資料。
		 * 可判斷若 relatedTarget 為 HTMLElement 即為新增模式。
		 */
		if (relatedTarget instanceof HTMLElement) {
			// console.log("新增...");
			elemEditTitle.textContent = "New";
			elemBtnEditSave.textContent = "Add";
		}
		else {
			// console.log(`編輯...`);
			elemEditModal.classList.add("modify");
			elemEditTitle.textContent = "Edit";
			elemBtnEditSave.textContent = "Update";
			
			// Account data
			elemAccountName.value = relatedTarget.name;
			elemAccountName.disabled = true;
			elemAccountEmail.value = relatedTarget.email;
			elemAccountEmail.disabled = true;
			
			// 有驗證過
			// console.log(`verified = ${relatedTarget.verified}`);
			if (relatedTarget.verified) {
				elemBlockVerification.classList.add("verified");
				elemVerifiedDate.textContent = relatedTarget.verified;
				elemBtnVerification.disabled = true;
			}
			
			// Access Level
			elemAccessLevel.value = relatedTarget.level;
		}
	});
	
	/**
	 * Skill：
	 * 設定 edit modal 開啟並渲染完成後執行的動作。
	 * shown 會等待 CSS 渲染完成後才觸發，可在這邊執行 focus。
	 * 但不適合在這邊進行資料的設定，畫面會呈現資料變動的現象。
	 * 因此資料的設定、focus 動作 分開於不同事件撰寫。
	 */
	elemEditModal.addEventListener('shown.bs.modal', (event) => {
		if (event.relatedTarget instanceof HTMLElement) {
			elemAccountName.focus();
		}
	});
	
	
	// 關閉 edit modal
	elemEditModal.addEventListener('hidden.bs.modal', (event) => {
		// Reset form
		elemEditForm.reset();
		elemEditModal.classList.remove("modify");
		elemAccountName.disabled = false;
		elemAccountEmail.disabled = false;
		elemBlockVerification.classList.remove("verified");
		elemVerifiedDate.textContent = "";
		elemBtnVerification.disabled = false;
		
		// 移除 BS form validation 效果
		elemEditForm.classList.remove('was-validated');
	});
	
	
	// 點擊功能欄按鈕
	document.querySelectorAll("[data-func]").forEach((item) => {
		item.addEventListener("click", (event) => {
			
			const viewId = event.target.dataset.funcView;
			const editId = event.target.dataset.funcEdit;
			
			const id = viewId || editId;
			const data = getData(id);	// 取得資料
			// console.log(`Find data ==>`, data);
			
			if (viewId !== undefined)
			{
				// console.log(`view ==> ${viewId}`);
				elemViewId.textContent = `#${data.id}`;
				elemViewName.textContent = data.name;
				elemViewEmail.textContent = data.email;
				
				viewModal.show();
			}
			else if (editId !== undefined) {
				// console.log(`edit ==> ${editId}`);
				editModal.show(data);	// 將 data 作為 relatedTarget
			}
		});
	});
	
</script>
